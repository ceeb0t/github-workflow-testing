name: Add.SFTP.User
on:
  workflow_dispatch:
    inputs:
      nd_sftp_username:
        type: string
        description: Username to be created
        required: true
      nd_sftp_bucketname:
        type: string
        description: Bucket Name
        required: true
      nd_sftp_bucketpath:
        type: string
        description: Bucket path required; else username used
        required: false
      nd_sftp_targetpath:
        type: string
        description: Target path if not root
        required: true
        default: /
      nd_sftp_password:
        type: string
        description: Password
        required: false
jobs:
  add-sftp-user:
    name: Add.SFTP.User
    runs-on:
      group: ${{ vars.RUNNER_SMALL_GROUP_NAME }}
    steps:
      - name: Generate Bucket path if required
        id: generate-bucketpath
        run: |
          if [ -z "${{ inputs.nd_sftp_bucketpath }}" ]; then
            BUCKETPATH="${{ inputs.nd_sftp_username }}"
          else
            BUCKETPATH="${{ inputs.nd_sftp_bucketpath }}"
          fi
          echo "bucketpath=$BUCKETPATH" >> $GITHUB_ENV
      - name: Generate Password if required
        id: generate-password
        run: |
          if [ -z "${{ inputs.nd_sftp_password }}" ]; then
            PASSWORD=$(openssl rand 60 | tr -dc 'a-zA-Z0-9' | head -c30)
          else
            PASSWORD="${{ inputs.nd_sftp_password }}"
          fi
          echo "password=$PASSWORD" >> $GITHUB_ENV
      - name: Submit to API
        run: |
          echo "Submitting data to API..."
          outcome=$(curl -s -X POST "https://k6bw01xogf.execute-api.eu-west-1.amazonaws.com/user" \
            -H "Content-Type: application/json" \
            --data '{
              "UserName": "${{ inputs.nd_sftp_username }}",
              "Password": "${{ env.password }}",
              "Target": [{
                   "Entry": "${{ inputs.nd_sftp_targetpath }}",
                   "Target": "/${{ inputs.nd_sftp_bucketname }}/${{ env.bucketpath }}",
               }],
               "RoleName": "Production-Transfer-ServiceRole"
            }' | jq -r '.Message')
          echo "outcome=$outcome" >> $GITHUB_ENV
      - name: If Exists, skip
        if: ${{ contains(env.outcome, 'User already exists') }}
        run: echo "User already exists" >> $GITHUB_STEP_SUMMARY
      - name: If not exists, create user
        if: ${{ !contains(env.outcome, 'User already exists') }}
        run: |            
            echo "${{ env.outcome }}" >> $GITHUB_STEP_SUMMARY
            echo "Username: ${{ inputs.nd_sftp_username }}" >> $GITHUB_STEP_SUMMARY
            echo "Password: ${{ env.password }}" >> $GITHUB_STEP_SUMMARY